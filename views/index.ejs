<!DOCTYPE html>

<html lang="en-us">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1.0">

    <title>
      <% if (currGame == "") { %>
        Leaderboards
      <% } else { %>
        Leaderboards: <%= currGame %>
      <% } %>
    </title>

    <link rel="stylesheet" type="text/css" href="/css/semantic.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/dropdown.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/search.min.css" />
    <link rel="stylesheet" type="text/css" href="/css/base.css" />

  </head>
  <body>

    <!-- grid layout ---------------------------------------------------------->
    <div class="ui padded relaxed grid centered master">


      <!-- header row --------------------------------------------------------->
      <div id="row-header" class="row column centered">
        <h1 class="ui icon header">

          <i class="globe icon"></i>

          <div class="content">
            Leaderboards
            <div class="sub header">
              A RESTful API built with Node.js and Sequelize
            </div>
          </div>

        </h1>
      </div>


      <!-- game input row ----------------------------------------------------->
      <div id="row-game" class="row centered">
        <div class="eight wide computer sixteen wide mobile column">

          <form id="form-game" class="ui form">
            <div class="inline fields">

              <div class="twelve wide computer sixteen wide mobile field">
                <div class="ui fluid search search-game sixteen wide field">

                  <label>Create new game:</label>
                  <input class="prompt" name="input-game" type="text"
                    autocomplete=off placeholder="Ex: Apex Legends">

                </div>
              </div>

              <div class="input-game-buttons field">
                <div class="ui buttons">
                  <button name="submit-createGame" onclick="this.active=true"
                    class="ui positive button">Create</button>
                  <div class="or"></div>
                  <button name="submit-deleteGame" onclick="this.active=true"
                    class="ui button">Delete selected game</button>
                </div>
              </div>

            </div>
            <div id="form-game-errors" class="ui error message"></div>
          </form>

        </div>
      </div>


      <!-- content row -------------------------------------------------------->
      <div class="row column centered">

        <!-- game selection --------------------------------------------------->
        <div class="eight wide computer sixteen wide mobile column">
          <div class="field">
            <label><b>Selected Game: </b></label>
            <select id="input-gameSelect" class="ui dropdown">

              <% if (gameList.length == 0) { %>

                <!-- placeholder -->
                <option value data-invalid=true
                  >Please create a game to continue.</option>

              <% } else { %>

                <% for (var i = 0; i < gameList.length; i++) { %>
                  <% if (gameList[i] == currGame) { %>
                    <!-- if current game, select -->
                    <option value="<%= i+1 %>"
                      selected><%= gameList[i] %></option>
                  <% } else { %>
                    <option value="<%= i+1 %>"><%= gameList[i] %></option>
                  <% } %>
                <% } %>

              <% } %>

            </select>
          </div>
        </div>


        <br />
        <br />


        <!-- score table ------------------------------------------------------>
        <div class="eight wide computer sixteen wide mobile column">
          <table class="ui padded very table">

            <thead>
              <tr>
                <th>Username</th>
                <th>Score</th>
                <th>Delete</th>
              </tr>
            </thead>

            <tbody>

              <% if (entryData.length > 0) { %>
                <% for (var i = 0; i < entryData.length; i++) { %>
                <tr>
                  <td class="entry-username">
                    <i class="user icon"></i><%= entryData[i].user_name %>
                  </td>
                  <td class="entry-score"><%= entryData[i].score %></td>
                  <td class="entry-delete collapsing center aligned">
                    <i class="x icon"></i>
                  </td>
                </tr>
                <% } %>
              <% } else { %>
                <tr>
                  <td colspan="3" class="warning center aligned">
                    <span>No scores for this game exist on record.</span>
                  </td>
                <tr>
              <% } %>



            </tbody>

            <tfoot>
              <tr><th colspan="3">

                <!-- user/score input row ------------------------------------->
                <form id="form-userScore" class="ui form">
                  <div class="inline fields">

                    <div class="eight wide field">
                      <div class="ui search fluid search-username
                        sixteen wide field">

                        <label>Username:</label>
                        <input class="prompt" name="input-user" type="text"
                          autocomplete=off placeholder="Ex: TheLegend27">

                      </div>
                    </div>

                    <div class="eight wide field">
                      <label>Score:</label>
                      <input name="input-score" type="number" autocomplete=off
                        placeholder="Ex: 1234">
                    </div>

                    <button name="submit-createUserScore"
                      class="ui positive button">Add</button>

                  </div>
                  <div id="form-userScore-errors" class="ui error message"></div>
                </form>

              </th></tr>
            </tfoot>

          </table>
        </div>


      </div>


      <!-- footer row --------------------------------------------------------->
      <div id="footer" class="row column center aligned">
        <div class="ui segment eight wide">
          <p><i class="github icon"></i><a
            href="https://github.com/bossley9/leaderboard/">
            github.com/bossley9
          </a></p>
        </div>
      </div>


    </div>

    <script src="/js/jquery-3.3.1.min.js"></script>
    <script src="/js/semantic.min.js"></script>
    <script src="/js/dropdown.min.js"></script>
    <script src="/js/search.min.js"></script>

    <script>

      // -----------------------------------------------------------------------
      // Semantic Ui
      // -----------------------------------------------------------------------

      /* game form validation */
      $('#form-game').form({
        fields: {
          game: {
            identifier: "input-game",
            rules: [
              // need to manually trim starting and ending whitespace...
              {
                type: 'empty',
                prompt: 'Game name cannot be empty'
              },
              {
                type: 'maxLength[40]',
                prompt: 'Game name must be less than 40 characters'
              },
            ],
          }
        }
      });

      /* game form validation */
      $('#form-userScore').form({
        fields: {
          username: {
            identifier: "input-user",
            rules: [
              // need to manually trim starting and ending whitespace...
              {
                type: 'empty',
                prompt: 'Username cannot be empty'
              },
              {
                type: 'minLength[3]',
                prompt: 'Username must be at least 3 characters',
              },
              {
                type: 'maxLength[10]',
                prompt: 'Username cannot be more than 10 characters',
              },
              {
                type: 'doesntContain[ ]',
                prompt: 'Username cannot contain spaces',
              },
            ],
          },
          score: {
            identifier: "input-score",
            rules: [
              {
                type: 'empty',
                prompt: 'Score cannot be empty'
              },
              {
                type: 'integer[0..4000000000]',
                prompt: 'Score must be an integer between 0 and 4000000000'
              },
            ],
          },
        }
      });

      /* game dropdown */
      $('select').dropdown();

      /* username search list */
      var usernames = [];
      <% for (var u in userList) { %>
        usernames.push({ title: "<%= userList[u] %>" });
      <% } %>

      $('.search-username').search({
        source: usernames,
        minCharacters: 3,
      });

      /* game search list */
      var games = [];
      <% for (var g in gameList) { %>
        games.push({ title: "<%= gameList[g] %>" });
      <% } %>

      $('.search-game').search({
        source: games,
        minCharacters: 3,
      });

      // -----------------------------------------------------------------------
      // <Select> game change
      // -----------------------------------------------------------------------

      $('#input-gameSelect').on('change', function () {
        var gameName = this.options[this.selectedIndex].text;
        window.location = "/leaderboards/entries/" + gameName;
      });

      // -----------------------------------------------------------------------
      // CREATE/DELETE game
      // -----------------------------------------------------------------------

      $('#form-game').on('submit', function() {
        var form = document.getElementById("form-game").elements;
        /* input game */
        var inputGame = form["input-game"].value;
        // manually remove trailing whitespace
        inputGame = inputGame.replace(/^\s+|\s+$/gm,'');
        /* current game */
        var gameSelect = document.getElementById("input-gameSelect");
        var currentGame = gameSelect.options[gameSelect.selectedIndex].text;
        /* button submit */
        var createGame = form["submit-createGame"];
        var deleteGame = form["submit-deleteGame"];

        /* detect which form button was pressed */

        if (createGame.active) {

          // unnecessary because of page reloading but kept for completeness
          createGame.active = false;

          // only if form passes validation
          if( $('#form-game').form('is valid') ) {

            $.ajax({
              type: 'POST',
              url: '/leaderboards/api/createGame',
              data: { game: inputGame },
              success: function(data) {
                if (data.valid)
                  window.location = "/leaderboards/entries/" + data.game;
              },
            });

          }
        }

        else if (deleteGame.active) {

          // unnecessary because of page reloading but kept for completeness
          deleteGame.active = false;

          // clear form and hide validation errors
          $('#form-game').form('clear');
          var errors = document.getElementById("form-game-errors");
          while (errors.firstChild) errors.removeChild(errors.firstChild);

          // if first game is valid
          if (!gameSelect.firstElementChild.dataset.invalid) {

            $.ajax({
              type: 'DELETE',
              url: '/leaderboards/api/deleteGame',
              data: { game: currentGame },
              success: function(data) {
                if (data.valid && data.game.length > 0)
                  window.location = "/leaderboards/entries/";
              },
            });

          }

        }

        return false;
      });

      // -----------------------------------------------------------------------
      // CREATE user/score
      // -----------------------------------------------------------------------

      $('#form-userScore').on('submit', function() {
        var form = document.getElementById("form-userScore").elements;
        /* current game */
        var gameSelect = document.getElementById("input-gameSelect");
        var currentGame = gameSelect.options[gameSelect.selectedIndex].text;
        /* input username */
        var username = form["input-user"].value;
        // manually remove trailing whitespace
        username = username.replace(/^\s+|\s+$/gm,'');
        /* input score */
        var score = form["input-score"].value;

        // only if form passes validation
        if( $('#form-userScore').form('is valid') ) {
          if (!gameSelect.firstElementChild.dataset.invalid) {

            $.ajax({
              type: 'POST',
              url: '/leaderboards/api/createUserScore',
              data: {
                game: currentGame,
                username: username,
                score: score,
              },
              success: function(data) {
                if (data.valid && data.user == username && data.score == score)
                  location.reload();
              },
            });

          }
        }

        return false;
      });

      // -----------------------------------------------------------------------
      // DELETE user/score
      // -----------------------------------------------------------------------

      $('td.entry-delete').on('click', function() {
        var gameSelect = document.getElementById("input-gameSelect");
        var currentGame = gameSelect.options[gameSelect.selectedIndex].text;
        var username = this.parentElement
          .getElementsByClassName("entry-username")[0].innerText;
        var score = this.parentElement
          .getElementsByClassName("entry-score")[0].innerText;

        $.ajax({
          type: 'DELETE',
          url: '/leaderboards/api/deleteUserScore',
          data: {
            game: currentGame,
            username: username,
            score: score,
          },
          success: function(data) {
            if (data.valid && data.score > 0) location.reload();
          },
        });

        return false;
      });

    </script>
  </body>
</html>
